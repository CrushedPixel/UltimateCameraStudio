buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'kr.entree.spigradle' version '2.2.4'
    id 'io.freefair.lombok' version '5.3.3.3'
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
    id 'jacoco'
    id 'idea'
}

repositories {
    mavenLocal()
    mavenCentral()

    maven { url "https://repo.dmulloy2.net/repository/public/" }
}

apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

ext {
    mcVersion = project.property("mcVersion")
}

group project.property("group")

spigot {
    name = project.property("pluginName")
    authors = [project.property("author")]
    apiVersion = project.property("apiVersion")
    load = STARTUP
    //    depends = ['']
    //    softDepends = ['']
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

kotlin {
    explicitApi()
}

archivesBaseName = project.property("pluginName")

repositories {
    mavenCentral()
    spigot()
    maven { url = 'https://jitpack.io' }
}

dependencies {
    implementation spigotAll(mcVersion)
    implementation 'cloud.commandframework:cloud-bukkit:1.5.0'
    implementation 'cloud.commandframework:cloud-annotations:1.5.0'
    implementation 'org.jooq:joor-java-8:0.9.13'

    //compileOnly 'com.comphenix.protocol:ProtocolLib:4.7.0'
    compileOnly 'de.mcmdev:betterprotocol-api:1.0-SNAPSHOT'

    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.+'
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.16:1.5.0'
    testImplementation 'org.assertj:assertj-core:3.+'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

shadowJar {
//    dependencies {
//        include(dependency('co.aikar:acf-paper:0.5.0-SNAPSHOT'))
//    }
//    relocate 'co.aikar.commands', "${packageName}.acf"
//    relocate 'co.aikar.locales', "${packageName}.locales"
}

tasks.build.dependsOn(shadowJar)
tasks.publish.dependsOn(shadowJar)
tasks.prepareSpigotPlugins.dependsOn(shadowJar)

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    ignoreFailures = false
}

processResources {
    project.properties.put("version", this.version)
    expand project.properties
}

defaultTasks 'build'
